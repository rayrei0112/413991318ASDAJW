repeat wait() until game:IsLoaded()
ExcuteTime = os.time()

local ZetaUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Thevi99/UI_Mobile/main/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Thevi99/UI_Mobile/main/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/Thevi99/UI_Mobile/main/Addons/InterfaceManager.lua"))()


if not getgenv().SaveSettings then
    getgenv().SaveSettings = {
        ["AutoFarm_Level"] = false,
        ["Select_Weapon"] = "",
        ["Method_Mob"] = "Above",
        ["Distance_Method"] = 5,

    }
end
getrenv()._G.RenderDist1 = math.huge
local Cheat = {}


------------- VALUE LOCAL ----------------
local Players, LocalPlayer, ReplicatedStorage, VirtualUser, VirtualInputManager = game:GetService("Players"), game:GetService("Players").LocalPlayer, game:GetService("ReplicatedStorage"), game:GetService("VirtualUser"), game:GetService("VirtualInputManager")
local QuestManager = require(ReplicatedStorage.Modules.QuestManager) -- ดึง quest ทั้งหมดมาใช้

------------- FUNCTION -------------
local filename = "Zeta Hub - Add-On/SaveSettings/KingLegacy/" .. tostring(game.Players.LocalPlayer.Name) ..".json"

function Load()
    if readfile and writefile and isfile and isfolder then
        if not isfolder("Zeta Hub - Add-On") then
            makefolder("Zeta Hub - Add-On")
        end
        if not isfolder("Zeta Hub - Add-On/SaveSettings") then
            makefolder("Zeta Hub - Add-On/SaveSettings")
        end
        if not isfolder("Zeta Hub - Add-On/SaveSettings/KingLegacy") then
            makefolder("Zeta Hub - Add-On/SaveSettings/KingLegacy")
        end
        if not isfile(filename) then
            writefile(filename, game:GetService("HttpService"):JSONEncode(SaveSettings))
        else
            local Decode = game:GetService("HttpService"):JSONDecode(readfile(filename))
            for i,v in pairs(Decode) do
                SaveSettings[i] = v
            end
        end
    else
        warn("Failed Load")
        return false
    end
end
function Save()
    if readfile and writefile and isfile then
        if not isfile(filename) then
            Load()
        else
            local Decode = game:GetService("HttpService"):JSONDecode(readfile(filename))
            local Array = {}
            for i,v in pairs(SaveSettings) do
                Array[i] = v
            end
            writefile(filename, game:GetService("HttpService"):JSONEncode(Array))
        end
    else
        warn("Failed Save")
        return false
    end
end

Load()
Save()


function Cheat:Thread(func, ...) -- สร้าง thread ให้กับ function ที่เราต้องการ
    local args = {};
    local Success, ErrorMessage = pcall(function()
        coroutine.wrap(func)(unpack(args));    
    end)
    if not Success then
        print("Error Threading: " .. ErrorMessage);
    end
end

---------- Function Quest ----------
function Cheat:CombineTables(...) -- รวม table ทั้งหมดเข้าด้วยกัน
    local Tables = {...}
    local NewTable = {}
    for i,v in pairs(Tables) do
        for i2,v2 in pairs(v) do
            table.insert(NewTable, v2)
        end
    end
    return NewTable
end

function Cheat:IsQuest() -- เช็คว่าเรามี quest อยู่หรือไม่
    return not (tostring(LocalPlayer.CurrentQuest.Value) == "")
end

function Cheat:GetNPCs() -- หา npc ที่ใกล้ที่สุด
    local Highest = nil
    local Highest_Level = 0
    local Level = tonumber(LocalPlayer.PlayerStats.lvl.Value)
    for i,v in pairs(ReplicatedStorage.NPC:GetChildren()) do -- วนเช็ค npc ทั้งหมด
        if v.Name:lower():find("questlvl") and not v.Name:lower():find("daily") then -- เอาเฉพาะ npc ที่มี quest ออกมา
            local QuestLvl = tonumber(tostring(v.Name):split("QuestLvl")[2]) -- เพื่อเอา lvl ของ npc ออกมา
            if QuestLvl <= Level and QuestLvl > Highest_Level then -- เช็คว่า lvl ของ npc นั้นต่ำกว่า lvl ของเราหรือไม่
                Highest = v
                Highest_Level = QuestLvl
            end
        end
    end
    return Highest, Highest_Level
end

function Cheat:AcceptQuest(QuestName) -- รับเควส
    if not self:IsQuest() then
        local QuestUIs;
        for i,v in pairs(LocalPlayer.PlayerGui:GetChildren()) do
            if v:FindFirstChild("Dialogue") and v:FindFirstChild("LocalText") then
                QuestUIs = v
            end
        end
        if QuestUIs then
            QuestUIs.Dialogue.Accept.ImageTransparency = 1
            QuestUIs.Dialogue.Accept.BackgroundTransparency = 1
            QuestUIs.Dialogue.Accept.Size = UDim2.new(0,10000000,0,10000000)
            QuestUIs.Dialogue.Accept.Position = UDim2.new(-2,0,-10,0)
            wait(0)
            VirtualUser:Button1Down(Vector2.new(500, 500))
            VirtualUser:Button1Up(Vector2.new(500, 500))
        else
            ReplicatedStorage.Remotes.Functions.CheckQuest:InvokeServer({
                Name = QuestName
            })
            task.wait(0.3)
        end
    end
end

function Cheat:GetMobName() -- หาชื่อ mob ที่ต้องฆ่า
    local Mobs = nil
    local IsBosses = false
    if LocalPlayer.CurrentQuest.Value ~= "" then
        if QuestManager[LocalPlayer.CurrentQuest.Value] then
            Mobs = QuestManager[LocalPlayer.CurrentQuest.Value].Mob
            if QuestManager[LocalPlayer.CurrentQuest.Value].Ammount == 1 then
                IsBosses = true
            end
        end
    end
    return Mobs, IsBosses
end

local Monster = workspace:WaitForChild("Monster")
local Boss = Monster:WaitForChild("Boss")
local Mon = Monster:WaitForChild("Mon")

function Cheat:GetEntityByName() -- หา mob ที่ใกล้ที่สุด
    local Nearest = nil
    local Nearest_Distance = math.huge
    local Mobs, IsBosses = self:GetMobName()
    local MonChildren, BossChildren = Mon:GetChildren(), Boss:GetChildren()
    local Combied = self:CombineTables(MonChildren, BossChildren)
    for i,v in next, Combied do
        if v.Name == Mobs and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health > 0 then
            local Distance = (LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if Distance < Nearest_Distance then
                Nearest = v
                Nearest_Distance = Distance
            end
        end
    end
    return Nearest, Nearest_Distance
end


function Cheat:Perform()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") and LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health == 0 then
        return
    end
    if LocalPlayer.Character.Humanoid.Sit then
        LocalPlayer.Character.Humanoid.Sit = false
    end
    if not self:IsQuest() then -- ถ้าไม่มี quest อยู่
        local NPCs = self:GetNPCs()
        if NPCs then
            LocalPlayer.Character.HumanoidRootPart.CFrame = NPCs:GetModelCFrame() * CFrame.new(0, 5, 0)
            self:AcceptQuest(NPCs.Name)
        end
    else
        local Entity = Cheat:GetEntityByName() -- หา mob ที่ใกล้ที่สุด
        if Entity then
            repeat task.wait()
                LocalPlayer.Character.HumanoidRootPart.CFrame = Cheat.Teleport(Entity.HumanoidRootPart.CFrame,true)
                self:EquipTool()
                Cheat.Hit2()
                Cheat.EnableKen()
                Cheat.EnableBuso()
            until not Entity:FindFirstChildOfClass("Humanoid") or Entity:FindFirstChildOfClass("Humanoid").Health <= 0 or not self:IsQuest()
        else
            local NPCs = self:GetNPCs()
            if NPCs then
                LocalPlayer.Character.HumanoidRootPart.CFrame = NPCs:GetModelCFrame() * CFrame.new(0, 500, 0)
            end
        end
    end
end

Cheat:Thread(function()
    while true do task.wait()
        if getgenv().SaveSettings["AutoFarm_Level"] then
            local Success, ErrorMessage = pcall(function() -- ทำให้โปรแกรมไม่หลุด
                Cheat:Perform()
            end)
            if not Success then
                print("Error: " .. ErrorMessage); -- แสดง error ออกมา
            end
        end
    end
end)

--------------- Equip Tools ---------------
function Cheat:EquipTool()
    for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip ==  getgenv().SaveSettings["Select_Weapon"] then
            LocalPlayer.Character.Humanoid:EquipTool(v)
            break
        end
    end
end


------------- Attack X2 Damage -------------
local Weapon = {}
local RemoteAttack = game:GetService("ReplicatedStorage").Remotes.Functions.SkillAction;
local stringskill
local function ChangeRemoteArgM1(ArgName)
    Weapon = {}
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v.ClassName == "Tool" then
            Weapon[v.Name] = "None"
        end
    end
    for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerScripts.Services.ClientSkillHandler:GetChildren()) do
        if v.ClassName == "Folder" and v.Name ~= "FruitSkills" and v.Name:find("Skills") then
            for i, v2 in pairs(v:GetChildren()) do
                local Name = v2.Name:split("_Client")[1]
                if Weapon[Name] then
                    if v.Name:match("Sword") then
                        strings = "SW_"
                        stringskill = strings .. Name .. "_"
                        strings =  strings .. Name .. "_M1"
                        Weapon[v2.Name] = strings
                    else
                        strings = "FS_"
                        stringskill = strings .. Name .. "_"
                        strings =  strings .. Name .. "_M1"
                        Weapon[v2.Name] = strings
                    end
                end
            end
        end
    end
end
ChangeRemoteArgM1("ffffffffffff")

local function ClickAttack()
    for i, v in pairs(Weapon) do 
        RemoteAttack:InvokeServer(v);
    end
end

game.Players.LocalPlayer.Backpack.ChildAdded:connect(function()
    task.spawn(ChangeRemoteArgM1)
end)

Cheat.Hit2 = function()
    coroutine.wrap(function()
        ClickAttack()
    end)()
end

------------ FUNCTION: Teleport, Haki, Buso -------------------
local DungeonTeleportCount = 1
local CheckDungeon = 'Normal'
Cheat.Teleport = function(Position,UseMethod)
    if typeof(Position) == "Vector3" then
        if UseMethod == true then
            if getgenv().SaveSettings["Method_Mob"] == "Above" then
                RootPart.CFrame = CFrame.new(Position) * CFrame.new(0,getgenv().SaveSettings["Distance_Method"],0) * CFrame.Angles(math.rad(270),0,0)
            elseif getgenv().SaveSettings["Method_Mob"] == "Under" then
                RootPart.CFrame = CFrame.new(Position) * CFrame.new(0,0-getgenv().SaveSettings["Distance_Method"],0) * CFrame.Angles(math.rad(90),0,0)
            else
                RootPart.CFrame = CFrame.new(Position) * CFrame.new(0,0,getgenv().SaveSettings["Distance_Method"])
            end
        elseif UseMethod == "Island" then
            RootPart.CFrame = Position * CFrame.new(0,100,0)
        else
            RootPart.CFrame = CFrame.new(Position)
        end
    elseif typeof(Position) == "CFrame" then
        if UseMethod == true then
            if getgenv().SaveSettings["Method_Mob"] == "Above" then
                RootPart.CFrame = Position * CFrame.new(0,getgenv().SaveSettings["Distance_Method"],0) * CFrame.Angles(math.rad(270),0,0)
            elseif getgenv().SaveSettings["Method_Mob"] == "Under" then
                RootPart.CFrame = Position * CFrame.new(0,0-getgenv().SaveSettings["Distance_Method"],0) * CFrame.Angles(math.rad(90),0,0)
            else
                RootPart.CFrame = Position * CFrame.new(0,0,getgenv().SaveSettings["Distance_Method"])
            end
        elseif UseMethod == "Island" then
            RootPart.CFrame = Position * CFrame.new(0,500,0)
        elseif UseMethod == "Random" then
            if DungeonTeleportCount >= 4 then
                RootPart.CFrame = DungeonCFrame[CheckDungeon][DungeonTeleportCount]
                DungeonTeleportCount = 1
            else
                RootPart.CFrame = DungeonCFrame[CheckDungeon][DungeonTeleportCount]
                DungeonTeleportCount = DungeonTeleportCount + 1
            end
            wait(.4)
        else
            LocalPlayer.Character.HumanoidRootPart.CFrame = Position
        end
    else
        print("Invalid Position Data : " .. typeof(Position))
    end
end
Cheat.EnableKen = function()
    if Hum.Health > 0 and LocalPlayer.PlayerStats.KenShopValue.Value == "KenHaki" then
        if Char.KenOpen.Value == false then
            Collection.Keyboard("Y")
        end
    else
        LocalPlayer.PlayerStats.KenShopValue.Value = "KenHaki"
    end
end
Cheat.EnableBuso = function()
    if Hum.Health > 0 and game.Players.LocalPlayer.Character.Haki.Value == 0 then
        game.Players.LocalPlayer.Character.Haki.Value = 1
        game.Players.LocalPlayer.Character.Services.Client.Armament:FireServer()
    end
end







--------------- UI Mobile ---------------------
local Window = ZetaUI:CreateWindow({
    Title = "Zeta " .. ZetaUI.Version,
    SubTitle = "by TheVi",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.Home -- Used when theres no MinimizeKeybind
})


local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = ZetaUI.Options

do
    local Autofarm_Level = Tabs.Main:AddToggle("AutoFarm_Level", {Title = "Auto Farm Leve", Default = getgenv().SaveSettings["AutoFarm_Level"] })
    Autofarm_Level:OnChanged(function()
        getgenv().SaveSettings["AutoFarm_Level"] = Options.AutoFarm_Level.Value
        Save()
    end)



    local Select_Weapon = Tabs.Main:AddDropdown("Select_Weapon", {
        Title = "Select Weapon",
        Values = {"Combat", "Sword", "Fruit"},
        Multi = false,
        Default = getgenv().SaveSettings["Select_Weapon"],
    })
    Select_Weapon:OnChanged(function()
        getgenv().SaveSettings["Select_Weapon"] = Options.Select_Weapon.Value
        Save()
    end)

    local Method_Mob = Tabs.Main:AddDropdown("Method_Mob", {
        Title = "Farm Mode",
        Values = {"Above", "Behide", "Under"},
        Multi = false,
        Default = getgenv().SaveSettings["Method_Mob"],
    })
    Method_Mob:OnChanged(function()
        getgenv().SaveSettings["Method_Mob"] = Options.Method_Mob.Value
        Save()
    end)

    Tabs.Main:AddSlider("Distance_Method", {
        Title = "Distance Attack",
        Description = "Sword = 13 Combat = 7",
        Default = getgenv().SaveSettings["Distance_Method"],
        Min = 0,
        Max = 20,
        Rounding = 0,
        Callback = function(Value)
            print("Distance changed:", Value)
        end
    })

    Distance_Method:OnChanged(function()
        getgenv().SaveSettings["Distance_Method"] = Options.Distance_Method.Value
        Save()
    end)

end

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(ZetaUI)
InterfaceManager:SetLibrary(ZetaUI)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

ZetaUI:Notify({
    Title = "ZetaHub",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
